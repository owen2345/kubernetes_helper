documents:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: &app_name <%=deployment.name%>
    spec: &default_spec
      replicas: <%=deployment.replicas%>
      selector:
        matchLabels:
          name: *app_name
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
      minReadySeconds: 5
      template:
        metadata:
          labels:
            name: *app_name
        spec: &template_spec
          containers:
            - &app_container
              image: '<%=continuous_deployment.image_name%>:latest'
              <% if deployment.command %>
              command: ["/bin/bash", "-c", "<%= deployment.command %>"]
              <% end %>
              name: *app_name
              import_secrets: ['secrets.yml', '<%=secrets.name%>']
              ports:
                - containerPort: &port 3000
                  name: '<%=service.backend_port_name%>'

              <% if deployment.liveness_path %>
              livenessProbe: &liveness_probe
                httpGet:
                  path: <%=deployment.liveness_path%>
                  port: *port
                initialDelaySeconds: 50
                timeoutSeconds: 3
                periodSeconds: 15
              readinessProbe: *liveness_probe
              <% end %>

              <= include_template '_container_resources.yml', deployment.resources || {} >

              volumeMounts:
                - &log_volume
                  name: applog
                  mountPath: /app/log

                <% if deployment.cloud_secret_name %>
                - &cloud_credentials_volume
                  name: gcloud-creds
                  mountPath: /secrets/gcloud
                  readOnly: true
                <% end %>

            <% if deployment.cloud_secret_name %>
            - &cloudsql_container
              <%= include_template '_cloudsql.yml' %>
            <% end %>

            - &logs_container # print to stdout all log files
              <%= include_template '_log_printer.yml' %>

          terminationGracePeriodSeconds: 120
          volumes:
            <% if deployment.cloud_secret_name %>
            - name: gcloud-creds
              secret:
                secretName: '<%=deployment.cloud_secret_name%>'
            <% end %>

            - name: applog
              emptyDir: {}

  <% if deployment.job_name %>
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: &job_app_name <%=deployment.job_name%>
    spec:
      <<: *default_spec
      replicas: 1
      selector:
        matchLabels:
          name: *job_app_name
      template:
        metadata:
          labels:
            name: *job_app_name
        spec:
          <<: *template_spec
          containers:
            - <<: *app_container
              name: *job_app_name
              <% if deployment.job_command %>
              command: [ "/bin/bash", "-c", "<%= deployment.job_command %>" ]
              <% end %>
              <= include_template '_container_resources.yml', deployment.job_resources || {} >

            <% if deployment.job_sidekiq_alive_gem %>
              <%= include_template "_sidekiq_alive_gem.yml" %>
            <% else %>
              ports: [ ]
              <% if (deployment.job_services || []).any? %>
              livenessProbe: &liveness_probe
                exec:
                  command: [ /bin/sh, -c,
                      'if [ $(ps -ef | grep "<%= deployment.job_services.join("\|") %>" | grep -v "grep" | wc -l) -lt <%= deployment.job_services.count %> ]; then
                           echo "Some required services are not running"; exit 1;
                       fi' ]
                initialDelaySeconds: 120
                periodSeconds: 30
              readinessProbe: *liveness_probe
              <% end %>
            <% end %>

            <% if deployment.cloud_secret_name %>
            - *cloudsql_container
            <% end %>

            - <<: *logs_container
  <% end %>

  <% if deployment.replicas_range %>
  <%= include_template "_replicas.yml" %>
  <% end %>
